<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.prize.lottery.infrast.persist.mapper.PackInfoMapper">

    <resultMap id="PackInfoMap" type="com.prize.lottery.infrast.persist.po.PackInfoPo">
        <id column="id" property="id"/>
        <result column="seq_no" property="seqNo"/>
        <result column="name" property="name"/>
        <result column="remark" property="remark"/>
        <result column="price" property="price"/>
        <result column="discount" property="discount"/>
        <result column="time_unit" property="timeUnit"/>
        <result column="priority" property="priority"/>
        <result column="on_trial" property="onTrial"/>
        <result column="state" property="state"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modify" property="gmtModify"/>
    </resultMap>

    <resultMap id="PrivilegeMap" type="com.prize.lottery.infrast.persist.po.PackPrivilegePo">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="icon" property="icon"/>
        <result column="content" property="content"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modify" property="gmtModify"/>
    </resultMap>

    <resultMap id="PackStatisticsMap" type="com.prize.lottery.infrast.persist.po.PackStatisticsPo">
        <id column="id" property="id"/>
        <result column="day" property="day"/>
        <result column="pack_no" property="packNo"/>
        <result column="success_amt" property="successAmt"/>
        <result column="success_cnt" property="successCnt"/>
        <result column="closed_amt" property="closedAmt"/>
        <result column="closed_cnt" property="closedCnt"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modify" property="gmtModify"/>
    </resultMap>

    <resultMap id="PackMetricsVoMap" type="com.prize.lottery.infrast.persist.vo.PackMetricsVo">
        <id column="pack_no" property="packNo"/>
        <result column="pack_name" property="packName"/>
        <result column="success_amt" property="successAmt"/>
        <result column="success_cnt" property="successCnt"/>
        <result column="closed_amt" property="closedAmt"/>
        <result column="closed_cnt" property="closedCnt"/>
    </resultMap>

    <insert id="addPackInfo" parameterType="com.prize.lottery.infrast.persist.po.PackInfoPo"
            useGeneratedKeys="true" keyProperty="id">
        insert into
        pack_info(
        seq_no,
        name,
        <if test="remark!=null">
            remark,
        </if>
        price,
        discount,
        time_unit,
        state,
        priority,
        on_trial,
        gmt_create,
        gmt_modify)
        values
        (#{seqNo},
        #{name},
        <if test="remark!=null">
            #{remark},
        </if>
        #{price},
        #{discount},
        #{timeUnit},
        #{state},
        #{priority},
        #{onTrial},
        current_time,
        current_time)
    </insert>

    <update id="editPackInfo" parameterType="com.prize.lottery.infrast.persist.po.PackInfoPo">
        <if test="priority!=null and priority==1">
            update pack_info
            set priority=0,
            gmt_modify=current_time
            where priority=1;
        </if>
        <if test="onTrial!=null and onTrial==1">
            update pack_info
            set on_trial=0,
            gmt_modify=current_time
            where on_trial=1;
        </if>
        update pack_info
        set
        <if test="name!=null">
            name=#{name},
        </if>
        <if test="remark!=null">
            remark=#{remark},
        </if>
        <if test="price!=null">
            price=#{price},
        </if>
        <if test="discount!=null">
            discount=#{discount},
        </if>
        <if test="timeUnit!=null">
            time_unit=#{timeUnit},
        </if>
        <if test="state!=null">
            state=#{state},
        </if>
        <if test="priority!=null">
            priority=#{priority},
        </if>
        <if test="onTrial!=null">
            on_trial=#{onTrial},
        </if>
        gmt_modify=current_time
        where
        id=#{id};
    </update>

    <delete id="delPackInfo" parameterType="java.lang.String">
        delete
        from
            pack_info
        where
            seq_no = #{packNo}
    </delete>

    <select id="existPackName" parameterType="java.lang.String" resultType="java.lang.Integer">
        select
            ifnull((
                       select
                           1
                       from
                           pack_info
                       where
                           name = #{name}
                       limit 1
                   ), 0)
    </select>

    <select id="getPackInfoByNo" parameterType="java.lang.String" resultMap="PackInfoMap">
        select
            id,
            seq_no,
            name,
            remark,
            price,
            discount,
            time_unit,
            state,
            priority,
            on_trial,
            gmt_create
        from
            pack_info
        where
            seq_no = #{packNo}
    </select>

    <select id="getAllPackInfoList" resultMap="PackInfoMap">
        select
            id,
            seq_no,
            name,
            remark,
            price,
            discount,
            time_unit,
            state,
            priority,
            on_trial,
            gmt_create,
            gmt_modify
        from
            pack_info
    </select>

    <select id="getUsingPackList" parameterType="java.lang.Boolean" resultMap="PackInfoMap">
        select
        id,
        seq_no,
        name,
        remark,
        price,
        discount,
        time_unit,
        priority,
        on_trial,
        gmt_create
        from
        pack_info
        where
        state = 2
        <if test="excludeTrial">
            and on_trial=0
        </if>
    </select>

    <insert id="addPrivilegeList" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into
        pack_privilege(name,icon,content,sorted,gmt_create,gmt_modify)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.name},
            #{item.icon},
            #{item.content},
            #{item.sorted},
            current_time,
            current_time)
        </foreach>
    </insert>

    <update id="editPrivilegeList" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";">
            update pack_privilege
            set
            <if test="item.name!=null">
                name=#{item.name},
            </if>
            <if test="item.icon!=null">
                icon=#{item.icon},
            </if>
            <if test="item.content!=null">
                content=#{item.content},
            </if>
            <if test="item.sorted!=null">
                sorted=#{item.sorted},
            </if>
            gmt_modify=current_time
            where id=#{item.id}
        </foreach>
    </update>

    <delete id="removePrivileges" parameterType="java.util.List">
        delete
        from pack_privilege
        where id in
        <foreach collection="idList" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getPackPrivileges" parameterType="java.lang.String" resultMap="PrivilegeMap">
        select
            id,
            name,
            icon,
            content,
            sorted,
            gmt_create,
            gmt_modify
        from
            pack_privilege
        order by
            sorted
    </select>

    <select id="countPackPrivileges" resultType="java.lang.Integer">
        select
            count(1)
        from
            pack_privilege
    </select>

    <insert id="addPackStatistics" parameterType="com.prize.lottery.infrast.persist.po.PackStatisticsPo"
            useGeneratedKeys="true" keyProperty="id">
        insert into
        pack_statistics(day,
        pack_no,
        success_amt,
        success_cnt,
        closed_amt,
        closed_cnt,
        gmt_create,
        gmt_modify)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.day},
            #{item.packNo},
            #{item.successAmt},
            #{item.successCnt},
            #{item.closedAmt},
            #{item.closedCnt},
            current_time,
            current_time)
        </foreach>
        on duplicate key update
        success_amt=values(success_amt),
        success_cnt=values(success_cnt),
        closed_amt=values(closed_amt),
        closed_cnt=values(closed_cnt),
        gmt_modify=current_time
    </insert>

    <select id="getPackMetricsVo" resultMap="PackMetricsVoMap">
        select
            pi.seq_no                      as pack_no,
            pi.name                        as pack_name,
            ifnull(metrics.success_amt, 0) as success_amt,
            ifnull(metrics.success_cnt, 0) as success_cnt,
            ifnull(metrics.closed_amt, 0)  as closed_amt,
            ifnull(metrics.closed_cnt, 0)  as closed_cnt
        from
            pack_info pi
                left join
                (
                    select
                        pack_no,
                        sum(success_amt) as success_amt,
                        sum(success_cnt) as success_cnt,
                        sum(closed_amt)  as closed_amt,
                        sum(closed_cnt)  as closed_cnt
                    from
                        pack_statistics
                    group by
                        pack_no
                ) metrics
                on pi.seq_no = metrics.pack_no
        where
            pi.state = 2
        order by
            success_amt desc,
            pack_no
    </select>

    <select id="getDayPackStatistics" resultMap="PackStatisticsMap">
        select
            #{metricDate}                  as `day`,
            metrics.pack_no                as pack_no,
            ifnull(metrics.success_amt, 0) as success_amt,
            ifnull(metrics.success_cnt, 0) as success_cnt,
            ifnull(metrics.closed_amt, 0)  as closed_amt,
            ifnull(metrics.closed_cnt, 0)  as closed_cnt
        from
            (
                select
                    content -> '$.packNo'            as pack_no,
                    sum(if(state = 2, amount, 0))    as success_amt,
                    count(if(state = 2, true, null)) as success_cnt,
                    sum(if(state = 3, amount, 0))    as closed_amt,
                    count(if(state = 3, true, null)) as closed_cnt
                from
                    order_info
                where
                      datediff(gmt_create, #{metricDate}) = 0
                  and type = 1
                group by
                    pack_no
            ) metrics
    </select>

    <select id="getUserBuyPackList" parameterType="java.lang.Long" resultMap="PackInfoMap">
        select
            id,
            seq_no,
            name,
            remark,
            price,
            discount,
            time_unit,
            priority,
            on_trial,
            state,
            gmt_create
        from
            pack_info
        where
                seq_no in (
                              select
                                  oi.content -> '$.packNo'
                              from
                                  order_info oi
                              where
                                    oi.user_id = #{userId}
                                and oi.type = 1
                                and oi.state = 2
                          )
    </select>

</mapper>
